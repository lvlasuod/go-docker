apiVersion: apps/v1
kind: Deployment                 # Type of Kubernetes resource
metadata:
  name: go-hello-world           # Name of the Kubernetes resource
spec:
  selector:
    matchLabels:
      app: go-hello-world        # This deployment applies to any Pods matching the specified label
  template:                      # This deployment will create a set of pods using the configurations in this template
    metadata:
      labels:                    # The labels that will be applied to all the pods in this deployment
        app: go-hello-world 
    spec:                        # Spec for the container which will run in the Pod
      containers:
      - name: go-hello-world
        image: panahpourimasoud/go-hello-world:1.1.0
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 8080  # Should match the port number that the Go application listens on
        livenessProbe:           # To check the health of the Pod
          httpGet:
            path: /health/liveness
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 180
          periodSeconds: 15
          timeoutSeconds: 5
        readinessProbe:          # To check if the Pod is ready to serve traffic or not
          httpGet:
            path: /health/readiness
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 180
          timeoutSeconds: 1    
---
kind: HorizontalPodAutoscaler
apiVersion: autoscaling/v2
metadata:
  name: auto-scaler
spec:
  maxReplicas: 5
  minReplicas: 1
  scaleTargetRef:
    kind: Deployment
    name: go-hello-world
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
---
kind: Service
apiVersion: v1
metadata:
  name: go-hello-world
spec:
  type: NodePort
  selector:
    app: go-hello-world
  ports:
    - port: 8080
      name: tcp
      targetPort: 8080